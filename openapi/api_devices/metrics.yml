# OpenAPI spec for the /devices/metrics path
# Corresponds to the api_devices CDK stack.
# Make sure that any Lambda functions referenced in this file have matching
# names in the CDK code!
# This file is incorporated by reference into the top-level api.yml.
get:
  tags:
    - devices
  summary: Get Possible Device Metric Properties
  description: Returns the possible values for various metrics properties.
  operationId: GetPossibleDevicesMetrics
  responses:
    '200':
      description: Call was successful, results will be in the response body.
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: array
              description: Available namespaces and their metric names.
            example:
              thermal: ["CPU0", "CPU1", "CPU2"]
    '400':
      $ref: "../responses.yml#/400"
    '401':
      $ref: "../responses.yml#/401"
    '403':
      $ref: "../responses.yml#/403"
  security:
    - VideonAuthorizer: []
  x-amazon-apigateway-integration:
    type: aws_proxy
    # Lambda function must exist in CDK code, REGION and ACCOUNT will get populated at deployment.
    uri: arn:aws:apigateway:$REGION:lambda:path/2015-03-31/functions/arn:aws:lambda:$REGION:$ACCOUNT:function:api-devices-MetricsHandler-v1/invocations
    httpMethod: POST
  x-amazon-apigateway-request-validator: validate-everything
post:
  tags:
    - devices
  summary: Search Device Metrics - Multiple Devices
  description: Search for metrics for a specific device.
  operationId: SearchDevicesMetrics
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            device_guids:
              type: array
              description: Devices to retrieve metrics for.
              items:
                type: string
            metrics:
              type: array
              items:
                $ref: "../common.yml#/components/schemas/MetricsItems"
            start_time:
              type: string
              format: date-time
              description: The date and time indicating the earliest data to be returned,
                in ISO 8601 format as specified by
                [RFC 3339, Section 5.6](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6).
            end_time:
              type: string
              format: date-time
              description: The date and time indicating the latest data to be returned,
                in ISO 8601 format as specified by
                [RFC 3339, Section 5.6](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6).
            scan_by:
              type: string
              enum: [TimestampDescending, TimestampAscending]
              default: TimestampDescending
              description: >
                The order in which data should be returned:
                 * `TimestampAscending` - Returns the oldest data first
                 * `TimestampDescending` - Returns the newest data first
            label:
              type: string
              description: A label to assign to the metric. This is good for knowing
                which metric is returned. If omitted, a default label is generated by.
            pagination_size:
              type: integer
              minimum: 1
              maximum: 60
              default: 50
              description: The pagination size for the request.
            pagination_token:
              type: string
              description: Search results are paginated, up to 1MB of data or the client-defined
                amount, whichever is lower.  This means that the client is capped at 1MB of data per
                request.  If one of those limits is exceeded, the response will include a token to
                retrieve the next page.  If you have a pagination token from a previous request,
                pass it in here (all other parameters the same) to get the next page.  It may be
                necessary to repeat the call several times to obtain the full set of search results.
          required: ["device_guids", "start_time", "end_time", "metrics"]
  responses:
    '200':
      description: Call was successful, results will be in the response body.
      content:
        application/json:
          schema:
            $ref: "../common.yml#/components/schemas/MetricsResponse"
    '400':
      $ref: "../responses.yml#/400"
    '401':
      $ref: "../responses.yml#/401"
    '403':
      $ref: "../responses.yml#/403"
  security:
    - VideonAuthorizer: []
  x-amazon-apigateway-integration:
    type: aws_proxy
    # Lambda function must exist in CDK code, REGION and ACCOUNT will get populated at deployment.
    uri: arn:aws:apigateway:$REGION:lambda:path/2015-03-31/functions/arn:aws:lambda:$REGION:$ACCOUNT:function:api-devices-MetricsHandler-v1/invocations
    httpMethod: POST
  x-amazon-apigateway-request-validator: validate-everything
options:
  tags:
    - devices
  summary: CORS preflight
  description: Used by browsers to determine whether the request is safe
    to send.
  operationId: DevicesMetricsPreflight
  responses: 
    '204':
      description: CORS supported
  x-amazon-apigateway-integration:
    type: aws_proxy
    # Lambda function must exist in CDK code, REGION and ACCOUNT will get populated at deployment.
    uri: arn:aws:apigateway:$REGION:lambda:path/2015-03-31/functions/arn:aws:lambda:$REGION:$ACCOUNT:function:api-devices-MetricsHandler-v1/invocations
    httpMethod: POST
  x-amazon-apigateway-request-validator: validate-everything

